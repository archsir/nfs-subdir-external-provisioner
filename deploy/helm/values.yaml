replicaCount: 1
strategyType: Recreate

image:
  repository: docker.sunnywith.com/external_storage/nfs-client-provisioner
  tag: "21.01.17"
  pullPolicy: Always

nfs:
  server:
  path: /nfs-storage
  mountOptions:
  - vers=4.1

# For creating the StorageClass automatically:
storageClass:
  create: true

  # Set a provisioner name. If unset, a name will be generated.
  provisionerName: nfs-provisioner

  # Set StorageClass as the default StorageClass
  # Ignored if storageClass.create is false
  defaultClass: true

  # Set a StorageClass name
  # Ignored if storageClass.create is false
  name: nfs-client

  # Allow volume to be expanded dynamically
  allowVolumeExpansion: true

  # Method used to reclaim an obsoleted volume
  reclaimPolicy: Delete

  # Custom nfs child path
  pathPattern: "${.PVC.namespace}/${.PVC.name}"

  # When set to Retain your PVs will retain by the provisioner upon deletion of the PVC.
  # When set to Delete your PVs will delete by the provisioner upon deletion of the PVC.
  # When set to "" your PVs will skip to 'archiveOnDelete' by the provisioner upon deletion of the PVC.
  onDelete: Retain

  # When set to false your PVs will not be archived by the provisioner upon deletion of the PVC.
  archiveOnDelete: true

  # Set access mode - ReadWriteOnce, ReadOnlyMany or ReadWriteMany
  accessModes: ReadWriteOnce

## For RBAC support:
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# If true, create & use Pod Security Policy resources
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: false

## Set pod priorityClassName
# priorityClassName: ""

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true

  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
